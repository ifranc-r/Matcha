Factory is a sort of mini ORM where you can manage your tables in a DATABASE

initialize Class
parameter 1 name of table

      var fact_test = new Factory("user")



// Create a row
function create(dic)
parameter 1 : the dict with attributes and values to create
it will create a raw in the tab with the same attributes and VALUES
from the dic to the table

    let dic = {
            login:'login122',
              passwd:'passwd2',
              mail:'inti@max.frrew',
              last_connection: '0000-00-00 00:00:10'
              }
    fact_test.create(dic)


// Modif a Rows
function modif(dic)
parameter 1 : the dict with attributes and values to modify
parameter 2 : the sql search where you need to set
Will modify a raw in the tab with the same attributes and VALUES
from the dic to the table where there is the value searched

    let dic_modif = {
      login:'login222',
      passwd:'Jaime les poneys',
      mail:'inti@max.br',
      last_connection: '2010-01-00 10:10:10'
      }
    fact_test.modif(dic_modif, "login='login122'")

// Del a Rows
parameter 1 : the sql search where you need to delete

          fact_test.del("id=2")

// get_all() is a async function return all the tab
parameter 1 : the sql search where you need to search

                  async () => {
                    var fact_test = await new Factory("user")
                    const result = await fact_test.search("id = 1")
                    console.log(result)
                  }

// search(where) is a async function return the rows of query searched
parameter 1 : the sql search where you need to search

                  async () => {
                    var fact_test = await new Factory("user")
                    const result = await fact_test.search("id = 1")
                    console.log(result)
                  }

// exist(where) is a async function that return a bool is the search query exist
  parameter 1 : the sql search where you need to search

                  async () => {
                    var fact_test = await new Factory("user")
                    const result = await fact_test.search("id = 1")
                    console.log(result)
                  }

// Get the last row created is a async function
will return the last row

                    async () => {
                      var fact_test = await new Factory("user")
                      const result = await fact_test.last_id()
                      console.log(result)
                    }

// End connection_mysql
            fact_test.end()
